{
    type: sentence,
    op: if,
    guard: <expresion>,
    body: <start>
}

if (true)
{
    num x := 35;

}

if (true, def(x,35))

if (true)
{
    num x := 35;
    x+1;x+2

}

if (true, def(x,35))


x+1;x+2


(x+1)
(x+2)


[num] vector := [ x + 1, y + 4.2, ‘x * y’ ];

def ([num], vector, [ (x + (1 * 2)), (y + 4.2), (‘x * y’) ])

'[' args* ']'

args
    = e:expresion 'TkComma' e:args / e:expresion
    { return { op: ':=', type: 'instruction', operands: [e] } }
    
    { 
        return {
            op: :=,
            type: 'instruction'
            operands: [
                vector,
                [ 
                    { 
                        op: +,
                        type: expresion,
                        operands { x, 1 }
                    },
                    { 
                        op: +,
                        type: expresion,
                        operands { y, 4.2 }
                    },
                    ‘x * y’
                ],
                [num]

            ]

        } 
    }
